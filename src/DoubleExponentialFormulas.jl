module DoubleExponentialFormulas

using LinearAlgebra: norm

export
    quadde,
    quadts,
    quades,
    quadss

const h0inv = 8
const nmax = 1_000_000

function quadde end

function quadts(f::Function, T::Type{<:AbstractFloat}=Float64;
                rtol::Real=sqrt(eps(float(T))), atol::Real=0,
                maxeval::Integer=10_000_000)
    ϕ(t) = tanh(sinh(t)*π/2)
    ϕ′(t) = (cosh(t)*π/2)/cosh(sinh(t)*π/2)^2
    deformula(f, ϕ, ϕ′, T, rtol, atol, maxeval)
end

function quades end

function quadss end


# Compute double exponential formula iteratively until satisfying the given tolerance
function deformula(f::Function, ϕ::Function, ϕ′::Function, T::Type{<:AbstractFloat},
                   rtol::Real, atol::Real, maxeval::Integer)
    I0 = f(ϕ(zero(T)))*ϕ′(zero(T))
    h0 = one(T)/h0inv
    # I, n0 = trapez(f, ϕ, ϕ′, I0, h0, 1, 1, nmax, rtol, atol)
    I, eval = trapez(Float64, f, ϕ, ϕ′, I0, 0, rtol, atol)
    h = h0
    Ih = I*h
    p = 1
    while eval ≤ maxeval
        prevIh = Ih
        I, _eval, Ih, tol = trapez(Float64, f, ϕ, ϕ′, I, p, rtol, atol)
        eval += _eval
        E = norm(prevIh - Ih)
        !(E > tol) && break
        p += 1
    end
    Ih
end


# Compute the trapezoidal integration with translated integrals and weights
# Note: ϕ(-t) == -ϕ(t), w(-t) == w(t)
function trapez(f::Function, ϕ::Function, ϕ′::Function, I, h::Real,
                kstart::Int, kinc::Int, kend::Int, rtol::Real, atol::Real)
    tol = zero(float(eltype(I)))
    Ih = zero(I)
    lastk = 0
    for k in kstart:kinc:kend
        lastk = k
        x = ϕ(k*h)
        !(-1 < x < 1) && break
        w = ϕ′(k*h)
        !(w > 0) && break
        dI1 = f(x)*w
        dI2 = f(-x)*w
        I += dI1
        I += dI2
        Ih = I*h
        tol = max(norm(Ih)*rtol, atol)
        !(norm(dI1*h) + norm(dI2*h) > tol) && break
    end
    I, lastk, Ih, tol
end

function trapez(::Type{Float64}, f::Function, ϕ::Function, ϕ′::Function,
                I, p::Int, rtol::Real, atol::Real)
    table =
    if p == 0
        [(0.1943570033249354, 1.523283718634705),
         (0.3772097381640342, 1.389614759247256),
         (0.5391467053879677, 1.193463025849157),
         (0.6742714922484357, 0.9659765794123011),
         (0.7806074389832003, 0.737437848361548),
         (0.8595690586898966, 0.5310782754280541),
         (0.9148792632645746, 0.3604614184693438),
         (0.9513679640727469, 0.2300223945147887),
         (0.9739668681956775, 0.1374221077331677),
         (0.9870405605073769, 0.07638574357083236),
         (0.9940555066314022, 0.03917500549360078),
         (0.9975148564572244, 0.01834316698992786),
         (0.9990651964557858, 0.007742601026064251),
         (0.9996882640283532, 0.002902517747901313),
         (0.999909384695144,  9.499468042834703e-4),
         (0.9999774771924616, 2.662005137527172e-4),
         (0.9999953160412205, 6.248255924074408e-5),
         (0.9999992047371147, 1.198370136317073e-5),
         (0.9999998927816124, 1.826332059371064e-6),
         (0.9999999888756649, 2.143120455694301e-7),
         (0.9999999991427051, 1.868728226873643e-8),
         (0.9999999999528565, 1.163116581425581e-9),
         (0.9999999999982322, 4.937853877663217e-11),
         (0.999999999999957,  1.358178427453906e-12),
         (0.9999999999999993, 2.283492670261401e-14)]
    elseif p == 1
        [(0.09792388528783233, 1.55877335553333),
         (0.2878799327427159, 1.466014426716966),
         (0.4612535439395857, 1.297475750424978),
         (0.6102736575006389, 1.08163498549007),
         (0.7310180347925614, 0.8501728564566201),
         (0.8233170055064023, 0.630405135164744),
         (0.8898914027842602, 0.4408332362738583),
         (0.9351608575219846, 0.2902406793124543),
         (0.9641121642235473, 0.1793244121107283),
         (0.9814548266773352, 0.1034321542233329),
         (0.9911269924416988, 0.05528968374224059),
         (0.9961086654375085, 0.02713351001371201),
         (0.9984542087676977, 0.01208354359915796),
         (0.9994514344352746, 0.004816298143928466),
         (0.9998288220728749, 0.00169087399814264),
         (0.9999538710056279, 5.133938240679038e-4),
         (0.9999894820148185, 1.320523412560999e-4),
         (0.9999980171405954, 2.811016432794018e-5),
         (0.9999996988941526, 4.823718203261561e-6),
         (0.9999999642390809, 6.477756603592956e-7),
         (0.9999999967871991, 6.583518512718344e-8),
         (0.9999999997897329, 4.876006097424077e-9),
         (0.9999999999903939, 2.521634791853019e-10),
         (0.9999999999997081, 8.675931414979574e-12),
         (0.9999999999999944, 1.880207173075066e-13),
         (0.9999999999999999, 2.412423038430877e-15)]
    elseif p == 2
        [(0.04905596730507789, 1.567781431307222),
         (0.1464179842905879, 1.543881116176959),
         (0.2415663195388836, 1.497226222541036),
         (0.3331422645776381, 1.4300083548723),
         (0.4199521112784471, 1.345278884766252),
         (0.5010133893793091, 1.246701207451858),
         (0.5755844906351516, 1.138272243376305),
         (0.6431767589852047, 1.024044933111812),
         (0.703550005147142, 0.9078793791548954),
         (0.75669390863373, 0.7932427008205166),
         (0.8027987413432413, 0.6830685163442639),
         (0.842219246350757, 0.5796781030877874),
         (0.8754353976304087, 0.4847580912147554),
         (0.9030132815135739, 0.3993847415257171),
         (0.9255686340686127, 0.3240825396115291),
         (0.9437347860527572, 0.2589046395140535),
         (0.9581360227102137, 0.2035239988586017),
         (0.9693667328969173, 0.1573262034843662),
         (0.977976235186665, 0.1194974112886959),
         (0.9844588311674308, 0.08910313924094153),
         (0.9892484310901339, 0.06515553343253622),
         (0.9927169971968273, 0.0466682080548466),
         (0.9951760261553274, 0.03269873272660903),
         (0.9968803181281919, 0.02237947106364849),
         (0.9980333363154338, 0.01493783509605013),
         (0.9987935342988059, 0.009707223739391682),
         (0.9992811119217919, 0.006130037632083036),
         (0.9995847503515176, 0.003754250977431837),
         (0.9997679715995609, 0.00222508270647864),
         (0.9998748650487803, 0.001273327944708238),
         (0.9999350199250824, 7.018595156842427e-4),
         (0.9999675930679435, 3.716669362167776e-4),
         (0.9999845199022708, 1.885644297670035e-4),
         (0.9999929378766629, 9.139081749071024e-5),
         (0.9999969324491904, 4.21831838417576e-5),
         (0.9999987354718659, 1.848181359987918e-5),
         (0.9999995070057195, 7.659575852520328e-6),
         (0.9999998188937128, 2.991661587813884e-6),
         (0.9999999375540783, 1.096883512590129e-6),
         (0.9999999798745032, 3.759541186236066e-7),
         (0.9999999939641342, 1.19924427829028e-7),
         (0.999999998323362, 3.543477717142206e-8),
         (0.9999999995707878, 9.649888896108963e-9),
         (0.9999999998992777, 2.4091773256476e-9),
         (0.9999999999784553, 5.482835779709497e-10),
         (0.9999999999958246, 1.130605534749467e-10),
         (0.9999999999992715, 2.098933540451154e-11),
         (0.9999999999998863, 3.484193767026111e-12),
         (0.9999999999999842, 5.134127524501411e-13),
         (0.9999999999999981, 6.663992283308777e-14),
         (0.9999999999999998, 7.556721775780598e-15)]
    elseif p == 3
        [(0.02453976357464916, 1.570042029279593),
         (0.07352512298567129, 1.564021403773232),
         (0.1222291222015577, 1.552053169845412),
         (0.1704679723820105, 1.534281738154303),
         (0.218063473469712, 1.51091972307417),
         (0.264845076583448, 1.482243297885538),
         (0.3106517805528459, 1.448586254961322),
         (0.3553338251650745, 1.410332971446259),
         (0.3987541504672377, 1.367910511680897),
         (0.4407895990339009, 1.321780117443773),
         (0.481331846116905, 1.272428345537862),
         (0.5202880506912302, 1.220358109579358),
         (0.5575812282607782, 1.166079869932434),
         (0.5931503535919532, 1.11010319396534),
         (0.626950208051043, 1.052928879955267),
         (0.6589509917433501, 0.9950418040461331),
         (0.6891377250616677, 0.9369046127456679),
         (0.7175094674873241, 0.878952345552782),
         (0.7440783835473473, 0.8215880352669648),
         (0.7688686867682466, 0.7651792989089562),
         (0.791915492376142, 0.710055901205469),
         (0.8132636085029739, 0.6565082461316276),
         (0.8329662939194109, 0.6047867305784036),
         (0.8510840079878488, 0.5551018780036335),
         (0.867683175775646, 0.5076251588319081),
         (0.8828349882446689, 0.4624903980553678),
         (0.896614254280076, 0.4197956684450154),
         (0.9090983181630204, 0.3796055693866517),
         (0.9203660530319527, 0.3419537959230169),
         (0.9304969379971534, 0.3068459094179171),
         (0.9395702239332747, 0.2742622296890682),
         (0.9476641906151531, 0.2441607778698399),
         (0.9548554958050227, 0.2164802091172962),
         (0.9612186151511164, 0.1911426841334274),
         (0.9668253703123558, 0.1680566379482691),
         (0.9717445415654873, 0.1471194132578569),
         (0.9760415602565767, 0.1282197336312011),
         (0.9797782758006157, 0.1112399989887445),
         (0.9830127914811011, 0.09605839186518947),
         (0.9857993630252835, 0.08255078811070175),
         (0.9881883538007427, 0.07059246990686696),
         (0.9902262404675277, 0.06005964235863628),
         (0.9919556630026776, 0.05083075757257049),
         (0.993415513169264, 0.04278765215772568),
         (0.9946410557125112, 0.03581650560419646),
         (0.9956640768169531, 0.02980862811731014),
         (0.9965130546402537, 0.02466108731475328),
         (0.9972133470434686, 0.02027718381750013),
         (0.9977873919589065, 0.01656678625424758),
         (0.9982549161719962, 0.01344653660528572),
         (0.9986331486406774, 0.0108399371682559),
         (0.9989370348335121, 0.008677330749539188),
         (0.999179448934886, 0.006895785969066003),
         (0.9993714011409377, 0.005438899797623994),
         (0.9995222376512172, 0.004256529599017859),
         (0.9996398313456004, 0.003304466994034829),
         (0.9997307615198084, 0.002544065767529178),
         (0.9998004814311384, 0.001941835775984364),
         (0.9998534727731114, 0.00146901435994298),
         (0.9998933865475925, 0.001101126113451939),
         (0.9999231701292893, 8.175410133246951e-4),
         (0.9999451806144587, 6.010398799114748e-4),
         (0.9999612848078566, 4.373949561591166e-4),
         (0.9999729464252323, 3.149720918602123e-4),
         (0.9999813012701207, 2.243596520500854e-4),
         (0.9999872212820007, 1.580278840070121e-4),
         (0.9999913684483449, 1.100211284666672e-4),
         (0.9999942396276167, 7.568399658620161e-5),
         (0.9999962033471662, 5.14214974476588e-5),
         (0.9999975296238052, 3.449212475934323e-5),
         (0.9999984138109648, 2.283211810903615e-5),
         (0.9999989954106899, 1.490851403187063e-5),
         (0.9999993727073354, 9.59819412837848e-6),
         (0.9999996139885502, 6.089910032094918e-6),
         (0.9999997660233324, 3.806198326464488e-6),
         (0.9999998603712146, 2.34216672085281e-6),
         (0.9999999180047947, 1.418306715549397e-6),
         (0.9999999526426645, 8.447375638485987e-7),
         (0.999999973113236, 4.945828870275426e-7),
         (0.9999999850030763, 2.844992365915983e-7),
         (0.999999991786456, 1.606939457907621e-7),
         (0.9999999955856336, 8.907139514024227e-8),
         (0.9999999976732368, 4.842095019807233e-8),
         (0.9999999987979835, 2.579956822953588e-8),
         (0.9999999993917769, 1.346464552230208e-8),
         (0.9999999996987544, 6.878461095589906e-9),
         (0.9999999998540561, 3.437185674465007e-9),
         (0.9999999999308884, 1.678889768216189e-9),
         (0.9999999999680332, 8.009978447972989e-10),
         (0.9999999999855688, 3.729950184305272e-10),
         (0.9999999999936463, 1.693945778941169e-10),
         (0.9999999999972741, 7.496739757381857e-11),
         (0.9999999999988612, 3.230446433325243e-11),
         (0.9999999999995373, 1.354251291233631e-11),
         (0.9999999999998171, 5.518236946817485e-12),
         (0.9999999999999298, 2.183592209923368e-12),
         (0.9999999999999739, 8.383128960502684e-13),
         (0.9999999999999906, 3.119497728684815e-13),
         (0.9999999999999967, 1.124020895992289e-13),
         (0.9999999999999989, 3.917679450601654e-14),
         (0.9999999999999997, 1.319434223196803e-14)]
    else
        error("Too big p")
    end

    h0 = Float64(1.0)/h0inv
    h = h0/2^p
    tol = zero(float(eltype(I)))
    Ih = zero(I)
    eval = 0
    for (x, w) in table
        dI1 = f(x)*w
        dI2 = f(-x)*w
        I += dI1
        I += dI2
        Ih = I*h
        tol = max(norm(Ih)*rtol, atol)
        eval += 2
        !(norm(dI1*h) + norm(dI2*h) > tol) && break
    end
    I, eval, Ih, tol
end


end # module
